{"version":3,"file":"js/about.aeedd3e8.js","mappings":"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","sources":["webpack://LunaDocs/./src/views/DocumentView.vue?46d0","webpack://LunaDocs/./src/views/DocumentView.vue","webpack://LunaDocs/./src/views/DocumentView.vue?e2b0"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"header-details text-left\" }\nconst _hoisted_2 = { class: \"text-primary m-0\" }\nconst _hoisted_3 = { class: \"people-editing-currently flex py-1\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"text-primary m-0\" }, \"Peps currently editing:\", -1)\nconst _hoisted_5 = { class: \"font-semibold\" }\nconst _hoisted_6 = { key: 0 }\n\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport { useDocumentStore } from '@/stores/documentStore';\nimport { useToast } from \"primevue/usetoast\";\nimport Toolbar from 'primevue/toolbar';\nimport Button from 'primevue/button';\nimport { useRouter } from 'vue-router';\nimport Editor, { EditorTextChangeEvent } from 'primevue/editor';\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'DocumentView',\n  setup(__props) {\n\nconst documentStore = useDocumentStore();\nconst toast = useToast();\n\nconst documentId = ref('');\nconst documentName = ref('');\nconst documentContent = ref('');\n\nconst router = useRouter();\n\nconst listOfEditors = ref([] as string[]);\n\nonMounted(() => {\n  listOfEditors.value.push(\"Me\");\n  documentId.value = documentStore.documentId.toString();\n  documentName.value = documentStore.documentName.toString();\n  documentContent.value = documentStore.documentContent.toString();\n\n  periodicallyFetchNewDocContent()\n});\n\n// ws.onmessage = function (event) {\n//   try {\n//     const data = JSON.parse(event.data);\n//     console.log(\"Received:\", data);\n//     if (data.documentContent) {\n//       documentContent.value = data.documentContent;\n//     }\n//   } catch (e) {\n//     console.error(\"Failed to parse message:\", event.data);\n//   }\n// };\n\n\nconst onTextChange = (event: EditorTextChangeEvent) => {\n  console.log(documentId.value);\n  const message = {\n    documentId: documentId.value,\n    documentContent: event.textValue\n  };\n  documentStore.updateDocumentContent(parseInt(documentId.value), JSON.stringify(message));\n}\n\nconst periodicallyFetchNewDocContent = async () => {\n  console.log(\"Fetching new content...\")\n  const newContent = await documentStore.getDocumentContentById(parseInt(documentId.value));\n  console.log(\"Content is: \", newContent)\n  documentContent.value = newContent;\n  setTimeout(periodicallyFetchNewDocContent, 100);\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_ButtonGroup = _resolveComponent(\"ButtonGroup\")!\n  const _component_Toast = _resolveComponent(\"Toast\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(_unref(Toolbar), null, {\n      start: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_1, [\n          _createElementVNode(\"h1\", _hoisted_2, _toDisplayString(documentName.value), 1)\n        ])\n      ]),\n      center: _withCtx(() => [\n        _createVNode(_component_ButtonGroup, null, {\n          default: _withCtx(() => [\n            _createVNode(_unref(Button), {\n              label: \"Go back\",\n              icon: \"pi pi-sign-out\",\n              onClick: _cache[0] || (_cache[0] = ($event: any) => (_unref(router).back()))\n            })\n          ]),\n          _: 1\n        })\n      ]),\n      end: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _hoisted_4,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(listOfEditors.value, (editor) => {\n            return (_openBlock(), _createElementBlock(\"p\", {\n              class: \"text-sm text-color font-light m-0 px-1\",\n              key: editor\n            }, [\n              _createElementVNode(\"span\", _hoisted_5, [\n                _createTextVNode(_toDisplayString(editor) + \" \", 1),\n                (listOfEditors.value.length > 1 && editor !== listOfEditors.value[listOfEditors.value.length - 1])\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \",\"))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]))\n          }), 128))\n        ])\n      ]),\n      _: 1\n    }),\n    _createVNode(_unref(Editor), {\n      modelValue: documentContent.value,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((documentContent).value = $event)),\n      editorStyle: \"height: 83vh\",\n      class: \"pt-3\",\n      onTextChange: onTextChange\n    }, null, 8, [\"modelValue\"]),\n    _createVNode(_component_Toast)\n  ], 64))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport { useDocumentStore } from '@/stores/documentStore';\nimport { useToast } from \"primevue/usetoast\";\nimport Toolbar from 'primevue/toolbar';\nimport Button from 'primevue/button';\nimport { useRouter } from 'vue-router';\nimport Editor, { EditorTextChangeEvent } from 'primevue/editor';\n\nconst documentStore = useDocumentStore();\nconst toast = useToast();\n\nconst documentId = ref('');\nconst documentName = ref('');\nconst documentContent = ref('');\n\nconst router = useRouter();\n\nconst listOfEditors = ref([] as string[]);\n\nonMounted(() => {\n  listOfEditors.value.push(\"Me\");\n  documentId.value = documentStore.documentId.toString();\n  documentName.value = documentStore.documentName.toString();\n  documentContent.value = documentStore.documentContent.toString();\n\n  periodicallyFetchNewDocContent()\n});\n\n// ws.onmessage = function (event) {\n//   try {\n//     const data = JSON.parse(event.data);\n//     console.log(\"Received:\", data);\n//     if (data.documentContent) {\n//       documentContent.value = data.documentContent;\n//     }\n//   } catch (e) {\n//     console.error(\"Failed to parse message:\", event.data);\n//   }\n// };\n\n\nconst onTextChange = (event: EditorTextChangeEvent) => {\n  console.log(documentId.value);\n  const message = {\n    documentId: documentId.value,\n    documentContent: event.textValue\n  };\n  documentStore.updateDocumentContent(parseInt(documentId.value), JSON.stringify(message));\n}\n\nconst periodicallyFetchNewDocContent = async () => {\n  console.log(\"Fetching new content...\")\n  const newContent = await documentStore.getDocumentContentById(parseInt(documentId.value));\n  console.log(\"Content is: \", newContent)\n  documentContent.value = newContent;\n  setTimeout(periodicallyFetchNewDocContent, 100);\n}\n</script>\n\n<template>\n  <Toolbar>\n    <template #start>\n      <div class=\"header-details text-left\">\n        <h1 class=\"text-primary m-0\">{{ documentName }}</h1>\n      </div>\n    </template>\n\n    <template #center>\n      <ButtonGroup>\n        <Button label=\"Go back\" icon=\"pi pi-sign-out\" @click=\"router.back()\" />\n      </ButtonGroup>\n    </template>\n\n    <template #end>\n      <div class=\"people-editing-currently flex py-1\">\n        <h5 class=\"text-primary m-0\">Peps currently editing:</h5>\n        <p class=\"text-sm text-color font-light m-0 px-1\" v-for=\"editor in listOfEditors\" :key=\"editor\">\n          <span class=\"font-semibold\">{{ editor }} <span\n              v-if=\"listOfEditors.length > 1 && editor !== listOfEditors[listOfEditors.length - 1]\">,</span></span>\n        </p>\n      </div>\n    </template>\n  </Toolbar>\n\n\n  <Editor v-model=\"documentContent\" editorStyle=\"height: 83vh\" class=\"pt-3\" @text-change=\"onTextChange\" />\n\n  <Toast />\n</template>\n","import script from \"./DocumentView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./DocumentView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_createElementVNode","_hoisted_5","_hoisted_6","key","_defineComponent","__name","setup","__props","documentStore","useDocumentStore","documentId","useToast","ref","documentName","documentContent","router","useRouter","listOfEditors","onMounted","value","push","toString","periodicallyFetchNewDocContent","onTextChange","event","console","log","message","textValue","updateDocumentContent","parseInt","JSON","stringify","async","newContent","getDocumentContentById","setTimeout","_ctx","_cache","_component_ButtonGroup","_resolveComponent","_component_Toast","_openBlock","_createElementBlock","_Fragment","_createVNode","_unref","Toolbar","start","_withCtx","_toDisplayString","center","default","Button","label","icon","onClick","$event","back","_","end","_renderList","editor","_createTextVNode","length","_createCommentVNode","Editor","modelValue","editorStyle","__exports__"],"sourceRoot":""}